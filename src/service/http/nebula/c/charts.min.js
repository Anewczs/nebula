import{NebulaClient}from"/dist/web/main.js";const d3=NebulaClient.d3,ds=NebulaClient.d3.select;export class Charts{constructor(){this.displayTable=json=>{if(json.length>0){const area=ds("#show");area.html("");const tb=area.append("table");tb.append("thead").append("tr").attr("id","table_head"),tb.append("tbody").attr("id","table_content");const keys=Object.keys(json[0]),width=Math.round(100/keys.length);ds("#table_head").selectAll("th").data(keys).enter().append("th").attr("width",`${width}%`).text(d=>d),ds("#table_content").selectAll("tr").data(json).enter().append("tr").selectAll("td").data(row=>keys.map(column=>({column:column,value:row[column]}))).enter().append("td").text(d=>d.value)}},this.displayBar=(json,key,value)=>{const area=ds("#show");area.html("");const margin_top=20,margin_right=20,margin_bottom=70,margin_left=40,width=area.node().scrollWidth-margin_left-margin_right,height=600,x=d3.scaleBand().rangeRound([0,width]).paddingInner([.2]).paddingOuter([.4]).align([.5]),y=d3.scaleLinear().range([600,0]),xAxis=d3.axisBottom(x),yAxis=d3.axisLeft(y).ticks(10),svg=area.append("svg").attr("width",width+margin_left+margin_right).attr("height",600+margin_top+margin_bottom).append("g").attr("transform",`translate(${margin_left},${margin_top})`);x.domain(json.map(row=>row[key])),y.domain([0,d3.max(json,row=>row[value])]),svg.append("g").attr("class","x axis").attr("transform","translate(0, 600)").call(xAxis).selectAll("text").style("text-anchor","end").attr("dx","-.8em").attr("dy","-.55em").attr("transform","rotate(-45)"),svg.append("g").attr("class","y axis").call(yAxis).append("text").attr("transform","rotate(-90)").attr("y",6).attr("dy",".71em").style("text-anchor","end").text("Value ($)"),svg.selectAll("bar").data(json).enter().append("rect").style("fill","steelblue").attr("x",row=>x(row[key])).attr("y",row=>y(row[value])).attr("width",x.bandwidth()).attr("height",row=>600-y(row[value]))},this.displayPie=(json,key,value)=>{const area=ds("#show");area.html(""),json.sort((a,b)=>b[value]-a[value]);const w=area.node().scrollWidth,h=400,r=Math.min(w,h)/2,color=i=>d3.schemeCategory10[i%10],vis=area.append("svg:svg").data([json]).attr("width",w).attr("height",h).append("svg:g").attr("transform",`translate(${w/2},200)`),arc=d3.arc().outerRadius(r-10).innerRadius(0),pie=d3.pie().value(row=>row[value]),arcs=vis.selectAll("g.slice").data(pie).enter().append("svg:g").attr("class","slice");arcs.append("svg:path").attr("fill",(d,i)=>color(i)).attr("d",arc);const legend=vis.selectAll("g.legend").data(pie).enter().append("svg:g").attr("class","legend").attr("transform",(d,i)=>`translate(${r+100},${20*i-r+20})`);legend.append("svg:rect").attr("width",15).attr("height",15).attr("fill",(d,i)=>color(i)),legend.append("svg:text").attr("text-anchor","left").attr("x",18).attr("y",15).text((d,i)=>json[i][key])},this.displayLine=(json,key,value)=>{const area=ds("#show");area.html("");const margin_top=20,margin_right=60,margin_bottom=20,margin_left=60,width=area.node().scrollWidth-margin_left-margin_right,height=400-margin_top-margin_bottom;json.sort((a,b)=>a[key]<b[key]?-1:1);const x=d3.scaleBand().range([0,width]).domain(json.map(e=>e[key])),y=d3.scaleBand().range([0,height]).domain(json.map(e=>+e[value]).sort((a,b)=>b-a));var line=d3.line().x(d=>x(d[key])).y(d=>y(d[value])),svg=area.append("svg").attr("width",width+margin_left+margin_right).attr("height",height+margin_top+margin_bottom).append("g").attr("transform",`translate(${margin_left}, ${margin_top})`);svg.append("path").data([json]).attr("class","line").attr("d",line),svg.append("g").attr("transform",`translate(0, ${height})`).call(d3.axisBottom(x)),svg.append("g").call(d3.axisLeft(y))},this.displayTimeline=(json,key,value,start)=>{const area=ds("#show");area.html("");const margin_top=20,margin_right=60,margin_bottom=20,margin_left=60,width=area.node().scrollWidth-margin_left-margin_right,height=400-margin_top-margin_bottom,data=json.filter(obj=>+obj[value]>0).sort((a,b)=>a[key]-b[key]).map(e=>{let obj={};return obj[key]=1e3*e[key]+start,obj[value]=+e[value],obj}),count=data.length;if(0==count)return void console.log(`No data: ${json.length} -> ${count}`);const x=d3.scaleTime().range([0,width]).domain([data[0][key],data[count-1][key]]),y=d3.scaleLinear().range([height,0]).domain([d3.min(data,d=>d[value]),d3.max(data,d=>d[value])]);var line=d3.line().x(d=>x(new Date(d[key]))).y(d=>y(d[value])),svg=area.append("svg").attr("width",width+margin_left+margin_right).attr("height",height+margin_top+margin_bottom).append("g").attr("transform",`translate(${margin_left}, ${margin_top})`);svg.append("path").data([data]).attr("class","line").attr("d",line),svg.append("g").attr("transform",`translate(0, ${height})`).call(d3.axisBottom(x)),svg.append("g").call(d3.axisLeft(y))}}}